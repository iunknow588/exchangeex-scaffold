// script/deploy-exchange.js
const { ethers } = require("hardhat");
const { getBestRpcEndpoint, createProvider } = require("./network-utils");

async function main() {
    console.log("üöÄ ÂºÄÂßãÈÉ®ÁΩ≤ ExchangeEx_Standalone ÂêàÁ∫¶...");
    
    // Ëé∑ÂèñÊúÄ‰Ω≥ RPC Á´ØÁÇπ
    console.log("üåê Ê≠£Âú®ÂØªÊâæÂèØÁî®ÁöÑ RPC Á´ØÁÇπ...");
    const bestRpcUrl = await getBestRpcEndpoint();
    
    if (!bestRpcUrl) {
        console.error("‚ùå Ê≤°ÊúâÊâæÂà∞ÂèØÁî®ÁöÑ RPC Á´ØÁÇπÔºåÊó†Ê≥ïÈÉ®ÁΩ≤ÂêàÁ∫¶");
        console.log("üí° Âª∫ËÆÆÁ®çÂêéÈáçËØïÊàñ‰ΩøÁî®Êú¨Âú∞ÁΩëÁªúÊµãËØï");
        process.exit(1);
    }
    
    console.log(`\nüîó ‰ΩøÁî® RPC Á´ØÁÇπ: ${bestRpcUrl}`);
    
    // ÂàõÂª∫Ëá™ÂÆö‰πâÊèê‰æõËÄÖ
    const customProvider = createProvider(bestRpcUrl);
    
    // Ëé∑ÂèñÁ≠æÂêçËÄÖ
    const privateKey = process.env.PRIVATE_KEY;
    if (!privateKey) {
        console.error("‚ùå ËØ∑ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè PRIVATE_KEY");
        process.exit(1);
    }
    
    const wallet = new ethers.Wallet(privateKey, customProvider);
    console.log("üîë Á≠æÂêçËÄÖÂú∞ÂùÄ:", await wallet.getAddress());
    
    // Ê£ÄÊü•Ë¥¶Êà∑‰ΩôÈ¢ù
    const balance = await customProvider.getBalance(wallet.getAddress());
    console.log("üí∞ Ë¥¶Êà∑‰ΩôÈ¢ù:", ethers.formatEther(balance), "ETH");
    
    if (balance === 0n) {
        console.error("‚ùå Ë¥¶Êà∑‰ΩôÈ¢ù‰∏∫0ÔºåÊó†Ê≥ïÊîØ‰ªòÈÉ®ÁΩ≤Ë¥πÁî®");
        console.log("üí° ËØ∑‰ªéÊ∞¥ÈæôÂ§¥Ëé∑ÂèñÊµãËØïÁΩë‰ª£Â∏Å: https://testnet.faucet.injective.network/");
        process.exit(1);
    }
    
    // Ëé∑ÂèñÂêàÁ∫¶Â∑•ÂéÇ
    console.log("üì¶ Ëé∑ÂèñÂêàÁ∫¶Â∑•ÂéÇ...");
    const ExchangeEx = await ethers.getContractFactory("ExchangeEx", wallet);
    
    // ÈÉ®ÁΩ≤ÂêàÁ∫¶
    console.log("üöÄ Ê≠£Âú®ÈÉ®ÁΩ≤ÂêàÁ∫¶...");
    const exchangeEx = await ExchangeEx.deploy({
        gasPrice: 30e9,  // 30 Gwei
        gasLimit: 5e6,   // 5M gas limit (ÂêàÁ∫¶ËæÉÂ§ßÔºåÈúÄË¶ÅÊõ¥Â§ö gas)
    });
    
    // Á≠âÂæÖÈÉ®ÁΩ≤ÂÆåÊàê
    console.log("‚è≥ Á≠âÂæÖÈÉ®ÁΩ≤Á°ÆËÆ§...");
    await exchangeEx.waitForDeployment();
    const address = await exchangeEx.getAddress();
    
    console.log("‚úÖ ExchangeEx_Standalone ÂêàÁ∫¶ÈÉ®ÁΩ≤ÊàêÂäüÔºÅ");
    console.log("üìã ÂêàÁ∫¶Âú∞ÂùÄ:", address);
    console.log("üë§ ÂêàÁ∫¶ÊâÄÊúâËÄÖ:", await exchangeEx.owner());
    console.log("üîó Âå∫ÂùóÊµèËßàÂô®:", `https://testnet.blockscout.injective.network/address/${address}`);
    
    // ÊòæÁ§∫È™åËØÅ‰ø°ÊÅØ
    console.log("\nüîç ÂêàÁ∫¶È™åËØÅ‰ø°ÊÅØ:");
    console.log("üìù È™åËØÅÂëΩ‰ª§: npx hardhat verify --network inj_testnet " + address);
    console.log("üîó ÊâãÂä®È™åËØÅÈìæÊé•:", `https://testnet.blockscout.injective.network/address/${address}`);
    
    // ‰øùÂ≠òÈÉ®ÁΩ≤‰ø°ÊÅØ
    console.log("\nüìù ÈÉ®ÁΩ≤‰ø°ÊÅØ:");
    console.log("  ÂêàÁ∫¶Âú∞ÂùÄ:", address);
    console.log("  ÈÉ®ÁΩ≤ËÄÖ:", await exchangeEx.owner());
    console.log("  ÁΩëÁªú:", "Injective Testnet");
    console.log("  RPC Á´ØÁÇπ:", bestRpcUrl);
    console.log("  Âå∫ÂùóÊµèËßàÂô®:", `https://testnet.blockscout.injective.network/address/${address}`);
    
    // Âª∫ËÆÆ‰∏ã‰∏ÄÊ≠•Êìç‰Ωú
    console.log("\nüéØ ‰∏ã‰∏ÄÊ≠•Êìç‰Ωú:");
    console.log("  1. ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè: export CONTRACT_ADDRESS=\"" + address + "\"");
    console.log("  2. È™åËØÅÂêàÁ∫¶: npx hardhat run script/verify-contract.js --network inj_testnet");
    console.log("  3. ÊéàÊùÉ‰∫§ÊòìËÄÖ: npx hardhat run script/setup-permissions.js --network inj_testnet");
    console.log("  4. Ë∞ÉËØïÂêàÁ∫¶: npx hardhat run script/debug.js --network inj_testnet");
    console.log("  5. ÁõëÂê¨‰∫ã‰ª∂: npx hardhat run script/monitor-events.js --network inj_testnet");
}

main()
    .then(() => {
        console.log("üéâ ÈÉ®ÁΩ≤ËÑöÊú¨ÊâßË°åÂÆåÊàêÔºÅ");
        process.exit(0);
    })
    .catch((error) => {
        console.error("‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•:", error);
        process.exitCode = 1;
    }); 