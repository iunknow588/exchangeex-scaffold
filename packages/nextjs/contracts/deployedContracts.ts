/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  1439: {
    ExchangeEx: {
      address: "0x178Fc07106BAda5d423003d62e8aABb0850e1713",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "string",
              name: "marketID",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "orderHash",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          name: "DerivativeOrderCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "string",
              name: "marketID",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "orderHash",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          name: "SpotOrderCancelled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "string",
              name: "marketID",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "orderHash",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "cid",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "orderType",
              type: "string",
            },
          ],
          name: "SpotOrderCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "trader",
              type: "address",
            },
          ],
          name: "TraderAuthorized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "trader",
              type: "address",
            },
          ],
          name: "TraderRevoked",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "trader",
              type: "address",
            },
          ],
          name: "authorizeTrader",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "authorizedTraders",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "marketID",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "subaccountID",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "orderHash",
                  type: "string",
                },
                {
                  internalType: "int32",
                  name: "orderMask",
                  type: "int32",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
              ],
              internalType: "struct IExchangeModule.OrderData[]",
              name: "orderData",
              type: "tuple[]",
            },
          ],
          name: "batchCancelSpotOrders",
          outputs: [
            {
              internalType: "bool[]",
              name: "success",
              type: "bool[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "marketID",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "subaccountID",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "feeRecipient",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "orderType",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "triggerPrice",
                  type: "uint256",
                },
              ],
              internalType: "struct IExchangeModule.SpotOrder[]",
              name: "orders",
              type: "tuple[]",
            },
          ],
          name: "batchCreateSpotLimitOrders",
          outputs: [
            {
              components: [
                {
                  internalType: "string[]",
                  name: "orderHashes",
                  type: "string[]",
                },
                {
                  internalType: "string[]",
                  name: "createdOrdersCids",
                  type: "string[]",
                },
                {
                  internalType: "string[]",
                  name: "failedOrdersCids",
                  type: "string[]",
                },
              ],
              internalType: "struct IExchangeModule.BatchCreateSpotLimitOrdersResponse",
              name: "response",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint32[]",
              name: "nonces",
              type: "uint32[]",
            },
            {
              internalType: "string",
              name: "denom",
              type: "string",
            },
            {
              internalType: "uint256[]",
              name: "amounts",
              type: "uint256[]",
            },
          ],
          name: "batchDepositToSubaccounts",
          outputs: [
            {
              internalType: "bool[]",
              name: "",
              type: "bool[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint32[]",
              name: "nonces",
              type: "uint32[]",
            },
            {
              internalType: "string",
              name: "denom",
              type: "string",
            },
            {
              internalType: "uint256[]",
              name: "amounts",
              type: "uint256[]",
            },
          ],
          name: "batchWithdrawFromSubaccounts",
          outputs: [
            {
              internalType: "bool[]",
              name: "",
              type: "bool[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "marketID",
              type: "string",
            },
            {
              internalType: "string",
              name: "subaccountID",
              type: "string",
            },
            {
              internalType: "string",
              name: "orderHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          name: "cancelSpotOrder",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "marketID",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "subaccountID",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "feeRecipient",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "orderType",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "margin",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "triggerPrice",
                  type: "uint256",
                },
              ],
              internalType: "struct IExchangeModule.DerivativeOrder",
              name: "order",
              type: "tuple",
            },
          ],
          name: "createDerivativeLimitOrder",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "orderHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
              ],
              internalType: "struct IExchangeModule.CreateDerivativeLimitOrderResponse",
              name: "response",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "marketID",
              type: "string",
            },
            {
              internalType: "string",
              name: "subaccountID",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          name: "createSpotBuyOrder",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "orderHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
              ],
              internalType: "struct IExchangeModule.CreateSpotLimitOrderResponse",
              name: "response",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "marketID",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "subaccountID",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "feeRecipient",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "orderType",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "triggerPrice",
                  type: "uint256",
                },
              ],
              internalType: "struct IExchangeModule.SpotOrder",
              name: "order",
              type: "tuple",
            },
          ],
          name: "createSpotLimitOrder",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "orderHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
              ],
              internalType: "struct IExchangeModule.CreateSpotLimitOrderResponse",
              name: "response",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "marketID",
              type: "string",
            },
            {
              internalType: "string",
              name: "subaccountID",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          name: "createSpotMarketBuyOrder",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "orderHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "fee",
                  type: "uint256",
                },
              ],
              internalType: "struct IExchangeModule.CreateSpotMarketOrderResponse",
              name: "response",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "marketID",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "subaccountID",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "feeRecipient",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "orderType",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "triggerPrice",
                  type: "uint256",
                },
              ],
              internalType: "struct IExchangeModule.SpotOrder",
              name: "order",
              type: "tuple",
            },
          ],
          name: "createSpotMarketOrder",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "orderHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "fee",
                  type: "uint256",
                },
              ],
              internalType: "struct IExchangeModule.CreateSpotMarketOrderResponse",
              name: "response",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "marketID",
              type: "string",
            },
            {
              internalType: "string",
              name: "subaccountID",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          name: "createSpotMarketSellOrder",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "orderHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "fee",
                  type: "uint256",
                },
              ],
              internalType: "struct IExchangeModule.CreateSpotMarketOrderResponse",
              name: "response",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "marketID",
              type: "string",
            },
            {
              internalType: "string",
              name: "subaccountID",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          name: "createSpotSellOrder",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "orderHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
              ],
              internalType: "struct IExchangeModule.CreateSpotLimitOrderResponse",
              name: "response",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "subaccountID",
              type: "string",
            },
            {
              internalType: "string",
              name: "denom",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "deposit",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "emergencyWithdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "nonce",
              type: "uint32",
            },
          ],
          name: "generateSubaccountID",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint32[]",
              name: "nonces",
              type: "uint32[]",
            },
          ],
          name: "getAllSubaccountDeposits",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "denom",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "availableBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalBalance",
                  type: "uint256",
                },
              ],
              internalType: "struct IExchangeModule.SubaccountDepositData[][]",
              name: "allDeposits",
              type: "tuple[][]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getContractBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getDefaultSubaccountID",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "marketID",
              type: "string",
            },
            {
              internalType: "string",
              name: "subaccountID",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "orderHashes",
              type: "string[]",
            },
          ],
          name: "getSpotOrders",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "fillable",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isBuy",
                  type: "bool",
                },
                {
                  internalType: "string",
                  name: "orderHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
              ],
              internalType: "struct IExchangeModule.TrimmedSpotLimitOrder[]",
              name: "orders",
              type: "tuple[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "subaccountID",
              type: "string",
            },
            {
              internalType: "string",
              name: "denom",
              type: "string",
            },
          ],
          name: "getSubaccountDeposit",
          outputs: [
            {
              internalType: "uint256",
              name: "availableBalance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalBalance",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "subaccountID",
              type: "string",
            },
          ],
          name: "getSubaccountDeposits",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "denom",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "availableBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalBalance",
                  type: "uint256",
                },
              ],
              internalType: "struct IExchangeModule.SubaccountDepositData[]",
              name: "deposits",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "nonce",
              type: "uint32",
            },
          ],
          name: "getSubaccountID",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "trader",
              type: "address",
            },
          ],
          name: "revokeTrader",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "subaccountID",
              type: "string",
            },
          ],
          name: "subaccountPositions",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "subaccountID",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "marketID",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isLong",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "entryPrice",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "margin",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "cumulativeFundingEntry",
                  type: "uint256",
                },
              ],
              internalType: "struct IExchangeModule.DerivativePosition[]",
              name: "positions",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "sourceSubaccountID",
              type: "string",
            },
            {
              internalType: "string",
              name: "destinationSubaccountID",
              type: "string",
            },
            {
              internalType: "string",
              name: "denom",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferBetweenSubaccounts",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "sourceSubaccountID",
              type: "string",
            },
            {
              internalType: "string",
              name: "destinationSubaccountID",
              type: "string",
            },
            {
              internalType: "string",
              name: "denom",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferToExternalSubaccount",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "subaccountID",
              type: "string",
            },
            {
              internalType: "string",
              name: "denom",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "withdraw",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 87332649,
    },
  },
  31337: {},
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
